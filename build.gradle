plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'jacoco'
    id "org.sonarqube" version "4.3.1.3277"
}

group = 'ru.neoflex.learning.creaditpipeline'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

sonar {
    properties {
        property "sonar.projectKey", "zobnina_dossier"
        property "sonar.organization", "zobnina"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.coverage.exclusions", "**/model/*,**/serialization/*"
        property "sonar.exclusions", "**/model/*,**/serialization/*"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-annotations'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation 'org.testcontainers:kafka'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'com.github.javafaker:javafaker:1.0.2'
}

tasks.named('test') {
    useJUnitPlatform()
}


test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        csv.required = true
    }
}
